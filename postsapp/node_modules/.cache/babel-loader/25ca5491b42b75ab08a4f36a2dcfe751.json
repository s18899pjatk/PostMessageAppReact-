{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/components/PostsArea.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"10\",\n    right: \"0\",\n    margin: \"10px\"\n  },\n  updateButton: {\n    position: \"absolute\",\n    top: \"65px\",\n    right: \"50px\",\n    margin: \"10px\"\n  },\n  container: {\n    position: \"relative\"\n  },\n  hiddenDumb: {\n    visibility: \"hidden\"\n  },\n  metadata: {\n    color: \"white\"\n  }\n}));\n\nconst PostsArea = ({\n  updateHandler,\n  deleteHandler,\n  arr\n}) => {\n  const [txt_content, setText] = useState(\"\");\n  const classes = useStyles();\n  const [m, setM] = useState(\"\");\n\n  const getUserEmail = async function (id) {\n    try {\n      const response = await fetch(`/api/jwtAuth/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      console.log(parseRes[0].user_email);\n      let email = parseRes[0].user_email;\n      setM(email);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  let posts = arr.slice(0).reverse().map(post => /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    key: post.post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.hiddenDumb,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \" \", \" \" + getUserEmail(post.user_id)), /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.metadata,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Posted by: \" + m + \" at \" + post.post_date.slice(0, post.post_date.length - 5).replace(/T/, \" \"))), /*#__PURE__*/React.createElement(TextField, {\n    id: `id${post.post_id}`,\n    multiline: true,\n    variant: \"outlined\",\n    rows: 8,\n    defaultValue: post.txt_content,\n    xs: 8,\n    fullWidth: true,\n    onChange: e => setText(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.deleteButton,\n    \"aria-label\": \"delete\",\n    color: \"secondary\",\n    onClick: e => {\n      e.preventDefault();\n      deleteHandler(post.post_id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.updateButton,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      updateHandler(post.post_id, {\n        txt_content\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Edit\")));\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, posts));\n};\n\nexport default PostsArea;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/components/PostsArea.js"],"names":["React","useState","TextField","Button","Grid","IconButton","DeleteIcon","makeStyles","useStyles","theme","root","margin","spacing","deleteButton","position","top","right","updateButton","container","hiddenDumb","visibility","metadata","color","PostsArea","updateHandler","deleteHandler","arr","txt_content","setText","classes","m","setM","getUserEmail","id","response","fetch","method","headers","token","localStorage","parseRes","json","console","log","user_email","email","error","message","posts","slice","reverse","map","post","post_id","user_id","post_date","length","replace","e","currentTarget","value","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"10\",\n    right: \"0\",\n    margin: \"10px\",\n  },\n  updateButton: {\n    position: \"absolute\",\n    top: \"65px\",\n    right: \"50px\",\n    margin: \"10px\",\n  },\n  container: {\n    position: \"relative\",\n  },\n\n  hiddenDumb: {\n    visibility: \"hidden\",\n  },\n  metadata: {\n    color: \"white\"\n  },\n}));\n\nconst PostsArea = ({ updateHandler, deleteHandler, arr }) => {\n  const [txt_content, setText] = useState(\"\");\n  const classes = useStyles();\n  const [m, setM] = useState(\"\");\n\n  const getUserEmail = async function (id) {\n    try {\n      const response = await fetch(`/api/jwtAuth/${id}`, {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n      const parseRes = await response.json();\n      console.log(parseRes[0].user_email);\n\n      let email = parseRes[0].user_email;\n      setM(email);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  let posts = arr\n    .slice(0)\n    .reverse()\n    .map((post) => (\n      <Grid className={classes.container} key={post.post_id}>\n        <Grid container>\n          <h4 className={classes.hiddenDumb}> {\" \" + getUserEmail(post.user_id)}</h4>\n          <h4 className={classes.metadata}>\n            {\"Posted by: \" +\n              m +\n              \" at \" +\n              post.post_date\n                .slice(0, post.post_date.length - 5)\n                .replace(/T/, \" \")}\n          </h4>\n        </Grid>\n        <TextField\n          id={`id${post.post_id}`}\n          multiline\n          variant=\"outlined\"\n          rows={8}\n          defaultValue={post.txt_content}\n          xs={8}\n          fullWidth\n          onChange={(e) => setText(e.currentTarget.value)}\n        />\n\n        <IconButton\n          className={classes.deleteButton}\n          aria-label=\"delete\"\n          color=\"secondary\"\n          onClick={(e) => {\n            e.preventDefault();\n            deleteHandler(post.post_id);\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n\n        <Button\n          className={classes.updateButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={(e) => {\n            e.preventDefault();\n            updateHandler(post.post_id, { txt_content });\n          }}\n        >\n          Edit\n        </Button>\n      \n      </Grid>\n    ));\n\n  return (\n    <Grid>\n      <Grid>{posts}</Grid>\n    </Grid>\n  );\n};\nexport default PostsArea;\n"]},"metadata":{},"sourceType":"module"}