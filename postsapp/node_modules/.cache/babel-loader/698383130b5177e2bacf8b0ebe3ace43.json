{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport InputArea from \"./InputArea\";\nimport PostsArea from \"./PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\n\nconst Dashboard = ({\n  setAuth\n}) => {\n  const [arr, setArray] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const getName = async () => {\n    try {\n      const response = await fetch(\"/api/dashboard\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setName(parseRes.user_name);\n      setId(parseRes.user_id);\n      setEmail(parseRes.user_email);\n      console.log(id);\n      console.log(email);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getName();\n  });\n\n  const addHandler = async ({\n    txt_content\n  }, post_date, user_id) => {\n    try {\n      if (txt_content === \"\") return;\n      console.log(post_date);\n      const body = {\n        txt_content,\n        post_date,\n        user_id\n      };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async id => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deletePost);\n      setArray(arr.filter(arr => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, {\n    txt_content\n  }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setAuth: setAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Welcome: \", name)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputArea, {\n    addHandler: (addHandler, id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PostsArea, {\n    deleteHandler: deleteHandler,\n    updateHandler: updateHandler,\n    arr: arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/components/Dashboard.js"],"names":["React","useState","useEffect","InputArea","PostsArea","Grid","Header","Dashboard","setAuth","arr","setArray","name","setName","id","setId","email","setEmail","getName","response","fetch","method","headers","token","localStorage","parseRes","json","user_name","user_id","user_email","console","log","error","message","addHandler","txt_content","post_date","body","JSON","stringify","getPosts","deleteHandler","deletePost","filter","post_id","updateHandler","jsonData"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACjC,QAAM,CAACC,GAAD,EAAMC,QAAN,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACc,KAAD,EAAOC,QAAP,IAAmBf,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMgB,OAAO,GAAG,YAAY;AAC1B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EAAmB;AAC7CC,QAAAA,MAAM,EAAE,KADqC;AAE7CC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAEC,YAAY,CAACD;AAAtB;AAFoC,OAAnB,CAA5B;AAIA,YAAME,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAvB;AACAb,MAAAA,OAAO,CAACY,QAAQ,CAACE,SAAV,CAAP;AACAZ,MAAAA,KAAK,CAACU,QAAQ,CAACG,OAAV,CAAL;AACAX,MAAAA,QAAQ,CAACQ,QAAQ,CAACI,UAAV,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,EAAZ;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACD,KAXD,CAWE,OAAOgB,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AACD;AACF,GAfD;;AAiBA9B,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO;AACR,GAFQ,CAAT;;AAIA,QAAMgB,UAAU,GAAG,OAAO;AAAEC,IAAAA;AAAF,GAAP,EAAwBC,SAAxB,EAAmCR,OAAnC,KAA+C;AAChE,QAAI;AACF,UAAIO,WAAW,KAAK,EAApB,EAAwB;AACxBL,MAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACA,YAAMC,IAAI,GAAG;AAAEF,QAAAA,WAAF;AAAeC,QAAAA,SAAf;AAA0BR,QAAAA;AAA1B,OAAb;AACA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,EAAgB;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFiC;AAG1Ce,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHoC,OAAhB,CAA5B;AAKAG,MAAAA,QAAQ;AACRV,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACD,KAXD,CAWE,OAAOa,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AACD;AACF,GAfD;;AAiBA,QAAMQ,aAAa,GAAG,MAAO3B,EAAP,IAAc;AAClC,QAAI;AACF,YAAM4B,UAAU,GAAG,MAAMtB,KAAK,CAAE,cAAaN,EAAG,EAAlB,EAAqB;AACjDO,QAAAA,MAAM,EAAE;AADyC,OAArB,CAA9B;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAYW,UAAZ;AACA/B,MAAAA,QAAQ,CAACD,GAAG,CAACiC,MAAJ,CAAYjC,GAAD,IAASA,GAAG,CAACkC,OAAJ,KAAgB9B,EAApC,CAAD,CAAR;AACD,KAND,CAME,OAAOkB,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AACD;AACF,GAVD;;AAYA,QAAMY,aAAa,GAAG,OAAO/B,EAAP,EAAW;AAAEqB,IAAAA;AAAF,GAAX,KAA+B;AACnD,QAAI;AACF,UAAIA,WAAW,KAAK,EAApB,EAAwB;AACxB,YAAME,IAAI,GAAG;AAAEF,QAAAA;AAAF,OAAb;AACA,YAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaN,EAAG,EAAlB,EAAqB;AAC/CO,QAAAA,MAAM,EAAE,KADuC;AAE/CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFsC;AAG/Ce,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AAHyC,OAArB,CAA5B;AAKAP,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACD,KATD,CASE,OAAOa,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,OAAlB;AACD;AACF,GAbD;;AAeA,QAAMO,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,YAAM0B,QAAQ,GAAG,MAAM3B,QAAQ,CAACO,IAAT,EAAvB;AACAf,MAAAA,QAAQ,CAACmC,QAAD,CAAR;AACD,KAJD,CAIE,OAAOd,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAcA,KAAK,CAACC,OAApB;AACD;AACF,GARD;;AAUA9B,EAAAA,SAAS,CAAC,MAAM;AACdqC,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE/B,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcG,IAAd,CAHF,CAJF,eASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,UAAU,GAAEsB,UAAU,EAAEpB,EAAd,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AACE,IAAA,aAAa,EAAE2B,aADjB;AAEE,IAAA,aAAa,EAAEI,aAFjB;AAGE,IAAA,GAAG,EAAEnC,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,eAUE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CATF,CADF;AAwBD,CA7GD;;AA8GA,eAAeF,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport InputArea from \"./InputArea\";\nimport PostsArea from \"./PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\n\nconst Dashboard = ({ setAuth }) => {\n  const [arr, setArray] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [id, setId] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n\n  const getName = async () => {\n    try {\n      const response = await fetch(\"/api/dashboard\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n      const parseRes = await response.json();\n      setName(parseRes.user_name);\n      setId(parseRes.user_id);\n      setEmail(parseRes.user_email)\n      console.log(id);\n      console.log(email)\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getName();\n  });\n\n  const addHandler = async ({ txt_content }, post_date, user_id) => {\n    try {\n      if (txt_content === \"\") return;\n      console.log(post_date);\n      const body = { txt_content, post_date, user_id };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async (id) => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\",\n      });\n      console.log(deletePost);\n      setArray(arr.filter((arr) => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, { txt_content }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header setAuth={setAuth} />\n      </Grid>\n      <Grid item container>\n      <Grid item xs={1} />\n\n        <h2>Welcome: {name}</h2>\n      </Grid>\n      <Grid item container>\n        <Grid item xs={2} />\n        <Grid item xs={8}>\n          <InputArea addHandler={addHandler, id} />\n          <PostsArea\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n            arr={arr}\n          />\n        </Grid>\n        <Grid item xs={2} />\n      </Grid>\n    </Grid>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}