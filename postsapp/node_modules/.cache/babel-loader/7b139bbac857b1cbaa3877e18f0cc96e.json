{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport InputArea from \"./InputArea\";\nimport PostsArea from \"./PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\n\nconst Dashboard = ({\n  setAuth\n}) => {\n  const [arr, setArray] = useState([]);\n  const [email, setEmail] = useState(\"\");\n\n  getEmail = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/api/dashboard\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    createGenerateClassName;\n  });\n\n  const addHandler = async ({\n    txt_content\n  }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async id => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deletePost);\n      setArray(arr.filter(arr => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, {\n    txt_content\n  }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setAuth: setAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputArea, {\n    addHandler: addHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PostsArea, {\n    deleteHandler: deleteHandler,\n    updateHandler: updateHandler,\n    arr: arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/components/Dashboard.js"],"names":["React","useState","useEffect","InputArea","PostsArea","Grid","Header","Dashboard","setAuth","arr","setArray","email","setEmail","getEmail","response","fetch","method","headers","token","localStorage","error","console","message","createGenerateClassName","addHandler","txt_content","body","JSON","stringify","getPosts","log","deleteHandler","id","deletePost","filter","post_id","updateHandler","jsonData","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport InputArea from \"./InputArea\";\nimport PostsArea from \"./PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\n\nconst Dashboard = ({ setAuth }) => {\n  const [arr, setArray] = useState([]);\n  const [email, setEmail] = useState(\"\");\n\n  getEmail = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5003/api/dashboard\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n  useEffect(() => {\n    createGenerateClassName;\n  });\n\n  const addHandler = async ({ txt_content }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async (id) => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\",\n      });\n      console.log(deletePost);\n      setArray(arr.filter((arr) => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, { txt_content }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header setAuth={setAuth} />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={2} />\n        <Grid item xs={8}>\n          <InputArea addHandler={addHandler} />\n          <PostsArea\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n            arr={arr}\n          />\n        </Grid>\n        <Grid item xs={2} />\n      </Grid>\n    </Grid>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}