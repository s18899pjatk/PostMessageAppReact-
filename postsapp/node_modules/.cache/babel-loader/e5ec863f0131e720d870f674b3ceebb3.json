{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/components/PostsArea.js\";\nimport React, { useState } from \"react\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    margin: \"10px\"\n  },\n  updateButton: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"50px\",\n    margin: \"10px\"\n  },\n  container: {\n    position: \"relative\"\n  }\n}));\n\nconst PostsArea = ({\n  updateHandler,\n  deleteHandler,\n  arr\n}) => {\n  const [txt_content, setText] = useState(\"\");\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n\n  const getUserName = async id => {\n    try {\n      const response = await fetch(`/api/jwtAuth/${id}`, {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      console.log(parseRes[0].user_email);\n      await setEmail(parseRes[0].user_email);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  let posts = arr.slice(0).reverse().map(post => /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    key: post.post_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: `id${post.post_id}`,\n    multiline: true,\n    variant: \"outlined\",\n    rows: 8,\n    defaultValue: post.txt_content,\n    xs: 8,\n    fullWidth: true,\n    onChange: e => setText(e.currentTarget.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.deleteButton,\n    \"aria-label\": \"delete\",\n    color: \"secondary\",\n    onClick: e => {\n      e.preventDefault();\n      deleteHandler(post.post_id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.updateButton,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      updateHandler(post.post_id, {\n        txt_content\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Created at: \" + post.post_date.slice(0, post.post_date.length - 5).replace(/T/, \" \") + \"by: \" + email))));\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, posts));\n};\n\nexport default PostsArea;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/components/PostsArea.js"],"names":["React","useState","TextField","Button","Grid","IconButton","DeleteIcon","makeStyles","useStyles","theme","root","margin","spacing","deleteButton","position","top","right","updateButton","container","PostsArea","updateHandler","deleteHandler","arr","txt_content","setText","classes","email","setEmail","getUserName","id","response","fetch","method","headers","token","localStorage","parseRes","json","console","log","user_email","error","message","posts","slice","reverse","map","post","post_id","e","currentTarget","value","preventDefault","post_date","length","replace"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TextField, Button, Grid } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  deleteButton: {\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    margin: \"10px\",\n  },\n  updateButton: {\n    position: \"absolute\",\n    top: \"5px\",\n    right: \"50px\",\n    margin: \"10px\",\n  },\n  container: {\n    position: \"relative\",\n  },\n}));\n\nconst PostsArea = ({ updateHandler, deleteHandler, arr }) => {\n  const [txt_content, setText] = useState(\"\");\n  const classes = useStyles();\n  const [email, setEmail] = useState(\"\");\n  const getUserName = async (id) => {\n    \n    try {\n      const response = await fetch(`/api/jwtAuth/${id}`, {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n      const parseRes = await response.json();\n      console.log(parseRes[0].user_email);\n\n      await setEmail(parseRes[0].user_email);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  let posts = arr\n    .slice(0)\n    .reverse()\n    .map((post) => (\n      <Grid className={classes.container} key={post.post_id}>\n        <TextField\n          id={`id${post.post_id}`}\n          multiline\n          variant=\"outlined\"\n          rows={8}\n          defaultValue={post.txt_content}\n          xs={8}\n          fullWidth\n          onChange={(e) => setText(e.currentTarget.value)}\n        />\n\n        <IconButton\n          className={classes.deleteButton}\n          aria-label=\"delete\"\n          color=\"secondary\"\n          onClick={(e) => {\n            e.preventDefault();\n            deleteHandler(post.post_id);\n          }}\n        >\n          <DeleteIcon />\n        </IconButton>\n\n        <Button\n          className={classes.updateButton}\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={(e) => {\n            e.preventDefault();\n            updateHandler(post.post_id, { txt_content });\n          }}\n        >\n          Edit\n        </Button>\n        <Grid container>\n          <h3>\n            {\"Created at: \" +\n              post.post_date\n                .slice(0, post.post_date.length - 5)\n                .replace(/T/, \" \") +\n              \"by: \" + email }\n          </h3>\n        </Grid>\n      </Grid>\n    ));\n\n  return (\n    <Grid>\n      <Grid>{posts}</Grid>\n    </Grid>\n  );\n};\nexport default PostsArea;\n"]},"metadata":{},"sourceType":"module"}