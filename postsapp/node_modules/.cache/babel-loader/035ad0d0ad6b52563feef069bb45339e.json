{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/components/Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport InputArea from \"./InputArea\";\nimport PostsArea from \"./PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport { toast } from \"react-toastify\";\n\nconst Dashboard = ({\n  setAuth\n}) => {\n  const [arr, setArray] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [usr_id, setId] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const getName = async () => {\n    try {\n      const response = await fetch(\"/api/dashboard\", {\n        method: \"GET\",\n        headers: {\n          token: localStorage.token\n        }\n      });\n      const parseRes = await response.json();\n      setName(parseRes.user_name);\n      setId(parseRes.user_id);\n      setEmail(parseRes.user_email);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getName();\n  });\n\n  const addHandler = async ({\n    txt_content\n  }, post_date, user_id) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content,\n        post_date,\n        user_id\n      };\n      await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      getPosts();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async id => {\n    try {\n      const getPost = await fetch(`/api/posts/${id}`, {\n        method: \"GET\"\n      });\n      const parseRes = await getPost.json();\n\n      if (parseRes[0].user_id !== usr_id) {\n        toast.error(\"cannot delete someone's post\");\n        return;\n      }\n\n      await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\"\n      });\n      setArray(arr.filter(arr => arr.post_id !== id));\n      toast.info(\"deleted\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, {\n    txt_content\n  }) => {\n    try {\n      const getPost = await fetch(`/api/posts/${id}`, {\n        method: \"GET\"\n      });\n      const parseRes = await getPost.json();\n\n      if (parseRes[0].user_id !== usr_id) {\n        toast.error(\"cannot edit someone's post\");\n        return;\n      }\n\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      toast.info(\"updated\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    setAuth: setAuth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Welcome: \", name)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputArea, {\n    addHandler: addHandler,\n    id: usr_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PostsArea, {\n    deleteHandler: deleteHandler,\n    updateHandler: updateHandler,\n    arr: arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/components/Dashboard.js"],"names":["React","useState","useEffect","InputArea","PostsArea","Grid","Header","toast","Dashboard","setAuth","arr","setArray","name","setName","usr_id","setId","email","setEmail","getName","response","fetch","method","headers","token","localStorage","parseRes","json","user_name","user_id","user_email","error","console","message","addHandler","txt_content","post_date","body","JSON","stringify","getPosts","deleteHandler","id","getPost","filter","post_id","info","updateHandler","log","jsonData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../App.css\";\nimport InputArea from \"./InputArea\";\nimport PostsArea from \"./PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./Header\";\nimport { toast } from \"react-toastify\";\n\nconst Dashboard = ({ setAuth }) => {\n  const [arr, setArray] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [usr_id, setId] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n\n  const getName = async () => {\n    try {\n      const response = await fetch(\"/api/dashboard\", {\n        method: \"GET\",\n        headers: { token: localStorage.token },\n      });\n      const parseRes = await response.json();\n      setName(parseRes.user_name);\n      setId(parseRes.user_id);\n      setEmail(parseRes.user_email)\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getName();\n  });\n\n  const addHandler = async ({ txt_content }, post_date, user_id) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content, post_date, user_id };\n       await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      getPosts();\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async (id) => {\n    try {\n      const getPost = await fetch(`/api/posts/${id}`, {\n        method: \"GET\",\n      });\n      const parseRes = await getPost.json();\n      if(parseRes[0].user_id !== usr_id){\n        toast.error(\"cannot delete someone's post\");\n        return;\n      }\n       await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\",\n      });\n      setArray(arr.filter((arr) => arr.post_id !== id));\n      toast.info(\"deleted\");\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, { txt_content }) => {\n    try {\n      const getPost = await fetch(`/api/posts/${id}`, {\n        method: \"GET\",\n      });\n      const parseRes = await getPost.json();\n      if(parseRes[0].user_id !== usr_id){\n        toast.error(\"cannot edit someone's post\");\n        return;\n      }\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n       await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      toast.info(\"updated\");\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header setAuth={setAuth} />\n      </Grid>\n      <Grid item container>\n      <Grid item xs={1} />\n\n        <h2>Welcome: {name}</h2>\n      </Grid>\n      <Grid item container>\n        <Grid item xs={2} />\n        <Grid item xs={8}>\n          <InputArea addHandler={addHandler} id={usr_id} />\n          <PostsArea\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n            arr={arr}\n          />\n        </Grid>\n        <Grid item xs={2} />\n      </Grid>\n    </Grid>\n  );\n};\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}