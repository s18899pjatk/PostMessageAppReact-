{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport InputArea from \"./components/InputArea\";\nimport PostsArea from \"./components/PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\n\nfunction App() {\n  const [arr, setArray] = useState([]);\n\n  const addHandler = async ({\n    txt_content\n  }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async id => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deletePost);\n      setArray(arr.filter(arr => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, {\n    txt_content\n  }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputArea, {\n    addHandler: addHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PostsArea, {\n    deleteHandler: deleteHandler,\n    updateHandler: updateHandler,\n    arr: arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 55\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    render: props => /*#__PURE__*/React.createElement(Register, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 58\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/App.js"],"names":["React","useState","useEffect","InputArea","PostsArea","Grid","Header","BrowserRouter","Router","Switch","Route","Redirect","Login","Register","App","arr","setArray","addHandler","txt_content","body","response","fetch","method","headers","JSON","stringify","getPosts","console","log","error","message","deleteHandler","id","deletePost","filter","post_id","updateHandler","jsonData","json","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport InputArea from \"./components/InputArea\";\nimport PostsArea from \"./components/PostsArea\";\nimport { Grid } from \"@material-ui/core\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nfunction App() {\n  const [arr, setArray] = useState([]);\n\n  const addHandler = async ({ txt_content }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async (id) => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\",\n      });\n      console.log(deletePost);\n      setArray(arr.filter((arr) => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, { txt_content }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n    <Grid container direction=\"column\">\n      <Grid item>\n        <Header />\n      </Grid>\n      <Grid item container>\n        <Grid item xs={2} />\n        <Grid item xs={8}>\n          <InputArea addHandler={addHandler} />\n          <PostsArea\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n            arr={arr}\n          />\n        </Grid>\n        <Grid item xs={2} />\n      </Grid>\n        <Router>\n        <Switch>\n          <Route exact path=\"/login\" render={props => <Login {...props} />} />\n          <Route exact path=\"/register\" render={props => <Register {...props} />}/>\n        </Switch>\n        </Router>\n    </Grid>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}