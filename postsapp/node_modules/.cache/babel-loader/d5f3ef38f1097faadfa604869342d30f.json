{"ast":null,"code":"var _jsxFileName = \"/home/artem/PostMessageAppReact-/postsapp/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport InputArea from \"./components/InputArea\";\nimport PostsArea from \"./components/PostsArea\";\n\nfunction App() {\n  const [arr, setArray] = useState([]);\n\n  const addHandler = async ({\n    txt_content\n  }) => {\n    try {\n      const body = {\n        txt_content\n      };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async id => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\"\n      });\n      console.log(deletePost);\n      setArray(arr.filter(arr => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, {\n    txt_content\n  }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = {\n        txt_content\n      };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputArea, {\n    addHandler: addHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(PostsArea, {\n    deleteHandler: deleteHandler,\n    updateHandler: updateHandler,\n    arr: arr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/artem/PostMessageAppReact-/postsapp/src/App.js"],"names":["React","useState","useEffect","InputArea","PostsArea","App","arr","setArray","addHandler","txt_content","body","response","fetch","method","headers","JSON","stringify","getPosts","console","log","error","message","deleteHandler","id","deletePost","filter","post_id","updateHandler","jsonData","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport InputArea from \"./components/InputArea\";\nimport PostsArea from \"./components/PostsArea\";\n\nfunction App() {\n  const [arr, setArray] = useState([]);\n\n  const addHandler = async ({ txt_content }) => {\n    try {\n      const body = { txt_content };\n      const response = await fetch(\"/api/posts/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      getPosts();\n      console.log(response);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const deleteHandler = async (id) => {\n    try {\n      const deletePost = await fetch(`/api/posts/${id}`, {\n        method: \"DELETE\",\n      });\n      console.log(deletePost);\n      setArray(arr.filter((arr) => arr.post_id !== id));\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  const updateHandler = async (id, { txt_content }) => {\n    try {\n      if (txt_content === \"\") return;\n      const body = { txt_content };\n      const response = await fetch(`/api/posts/${id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n      console.log(response);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const getPosts = async () => {\n    try {\n      const response = await fetch(\"/api/posts/\");\n      const jsonData = await response.json();\n      setArray(jsonData);\n    } catch (error) {\n      console.error(error.message);\n    }\n  };\n\n  useEffect(() => {\n    getPosts();\n  }, []);\n\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <InputArea addHandler={addHandler} />\n          <PostsArea\n            deleteHandler={deleteHandler}\n            updateHandler={updateHandler}\n            arr={arr}\n          />\n        </header>\n      </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}